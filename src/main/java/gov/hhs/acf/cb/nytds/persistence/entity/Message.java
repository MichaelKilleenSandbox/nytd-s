package gov.hhs.acf.cb.nytds.persistence.entity;

// Generated May 20, 2009 10:16:43 AM by Hibernate Tools 3.2.4.GA

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.Calendar;
import java.util.Set;

/*
 * Message generated by hbm2java
 */
@Entity
@AttributeOverride(name = "id", column = @Column(name = "MessageId"))
@SequenceGenerator(name = "default_gen", sequenceName = "SEQ_MESSAGE", allocationSize = BaseEntity.DEFAULT_SEQUENCE_ALLOCATION_SIZE)
public class Message extends BaseEntity {
// persistent properties
//    @Getter
//    @Setter
//    private Sender sender;
    @Getter
    @Setter
    private String subject;
    @Getter
    @Setter
    @Column(length = 2000)
    private String messageBody;
    @Getter
    @Setter
    @ManyToOne
    @JoinColumn(name = "siteUserId")
    private SiteUser siteUser;
    @Getter
    @Setter
    @ManyToOne
    @JoinColumn(name = "PARENTMESSAGEID")
    private Message parentMessage;
    @Getter
    @Setter
    @ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE })
    @JoinTable(name = "MessageRecipient",
            joinColumns = @JoinColumn(name = "messageId"),
            inverseJoinColumns = @JoinColumn(name = "siteUserId"))
    private Set<SiteUser> recipients;

    @Getter
    @Setter
    @OneToMany(mappedBy = "parentMessage")
    private Set<Message> repliedMessages;

    // transient properties
    @Getter
    @Setter
    private String messageFrom;
    @Getter
    @Setter
    private String messageAddressedTo;
    @Getter
    @Setter
    private String beforeSignatureWord;
    @Getter
    @Setter
    private String signature;
    @Getter
    @Setter
    private String messageCreatedDate;

    public Message() {
    }

    public Message(Long messageId) {
        this.id = messageId;
    }

    public Message(Long messageId, String subject,
                   Calendar createdDate, String createdBy,
                   Calendar updateDate, String updateBy, String description) {
        this.id = messageId;
        this.subject = subject;
        this.createdDate = createdDate;
        this.createdBy = createdBy;
        this.updateDate = updateDate;
        this.updateBy = updateBy;
        this.description = description;
    }


}
